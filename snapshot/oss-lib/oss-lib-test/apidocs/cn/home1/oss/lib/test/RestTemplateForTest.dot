#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// cn.home1.oss.lib.test.RestTemplateForTest14x
	c15 [label=<<table title="cn.home1.oss.lib.test.RestTemplateForTest14x" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RestTemplateForTest14x.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RestTemplateForTest14x </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RestTemplateForTest14x(restTemplateBuilder : RestTemplateBuilder) </td></tr>
<tr><td align="left" balign="left"> + RestTemplateForTest14x(httpClientOptions : TestRestTemplate.HttpClientOption[]) </td></tr>
<tr><td align="left" balign="left"> + RestTemplateForTest14x(username : String, password : String, httpClientOptions : TestRestTemplate.HttpClientOption[]) </td></tr>
<tr><td align="left" balign="left"> + RestTemplateForTest14x(restTemplate : RestTemplate) </td></tr>
<tr><td align="left" balign="left"> + RestTemplateForTest14x(restTemplate : RestTemplate, username : String, password : String, httpClientOptions : TestRestTemplate.HttpClientOption[]) </td></tr>
<tr><td align="left" balign="left"> + RestTemplateForTest14x(restTemplate : TestRestTemplate) </td></tr>
<tr><td align="left" balign="left"> + getRestTemplate() : RestTemplate </td></tr>
<tr><td align="left" balign="left"> + setUriTemplateHandler(handler : UriTemplateHandler) </td></tr>
<tr><td align="left" balign="left"> + withBasicAuth(username : String, password : String) : RestTemplateForTest </td></tr>
<tr><td align="left" balign="left"> + getForObject(url : String, responseType : Class&lt;T&gt;, urlVariables : Object[]) : T </td></tr>
<tr><td align="left" balign="left"> + getForObject(url : String, responseType : Class&lt;T&gt;, urlVariables : Map&lt;String, ?&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + getForObject(url : URI, responseType : Class&lt;T&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + getForEntity(url : String, responseType : Class&lt;T&gt;, urlVariables : Object[]) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getForEntity(url : String, responseType : Class&lt;T&gt;, urlVariables : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getForEntity(url : URI, responseType : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + headForHeaders(url : String, urlVariables : Object[]) : HttpHeaders </td></tr>
<tr><td align="left" balign="left"> + headForHeaders(url : String, urlVariables : Map&lt;String, ?&gt;) : HttpHeaders </td></tr>
<tr><td align="left" balign="left"> + headForHeaders(url : URI) : HttpHeaders </td></tr>
<tr><td align="left" balign="left"> + postForLocation(url : String, request : Object, urlVariables : Object[]) : URI </td></tr>
<tr><td align="left" balign="left"> + postForLocation(url : String, request : Object, urlVariables : Map&lt;String, ?&gt;) : URI </td></tr>
<tr><td align="left" balign="left"> + postForLocation(url : URI, request : Object) : URI </td></tr>
<tr><td align="left" balign="left"> + postForObject(url : String, request : Object, responseType : Class&lt;T&gt;, urlVariables : Object[]) : T </td></tr>
<tr><td align="left" balign="left"> + postForObject(url : String, request : Object, responseType : Class&lt;T&gt;, urlVariables : Map&lt;String, ?&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + postForObject(url : URI, request : Object, responseType : Class&lt;T&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + postForEntity(url : String, request : Object, responseType : Class&lt;T&gt;, urlVariables : Object[]) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + postForEntity(url : String, request : Object, responseType : Class&lt;T&gt;, urlVariables : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + postForEntity(url : URI, request : Object, responseType : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + put(url : String, request : Object, urlVariables : Object[]) </td></tr>
<tr><td align="left" balign="left"> + put(url : String, request : Object, urlVariables : Map&lt;String, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + put(url : URI, request : Object) </td></tr>
<tr><td align="left" balign="left"> + delete(url : String, urlVariables : Object[]) </td></tr>
<tr><td align="left" balign="left"> + delete(url : String, urlVariables : Map&lt;String, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + delete(url : URI) </td></tr>
<tr><td align="left" balign="left"> + optionsForAllow(url : String, urlVariables : Object[]) : Set&lt;HttpMethod&gt; </td></tr>
<tr><td align="left" balign="left"> + optionsForAllow(url : String, urlVariables : Map&lt;String, ?&gt;) : Set&lt;HttpMethod&gt; </td></tr>
<tr><td align="left" balign="left"> + optionsForAllow(url : URI) : Set&lt;HttpMethod&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(url : String, method : HttpMethod, requestEntity : HttpEntity&lt;?&gt;, responseType : Class&lt;T&gt;, urlVariables : Object[]) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(url : String, method : HttpMethod, requestEntity : HttpEntity&lt;?&gt;, responseType : Class&lt;T&gt;, urlVariables : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(url : URI, method : HttpMethod, requestEntity : HttpEntity&lt;?&gt;, responseType : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(url : String, method : HttpMethod, requestEntity : HttpEntity&lt;?&gt;, responseType : ParameterizedTypeReference&lt;T&gt;, urlVariables : Object[]) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(url : String, method : HttpMethod, requestEntity : HttpEntity&lt;?&gt;, responseType : ParameterizedTypeReference&lt;T&gt;, urlVariables : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(url : URI, method : HttpMethod, requestEntity : HttpEntity&lt;?&gt;, responseType : ParameterizedTypeReference&lt;T&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(requestEntity : RequestEntity&lt;?&gt;, responseType : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + exchange(requestEntity : RequestEntity&lt;?&gt;, responseType : ParameterizedTypeReference&lt;T&gt;) : ResponseEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + execute(url : String, method : HttpMethod, requestCallback : RequestCallback, responseExtractor : ResponseExtractor&lt;T&gt;, urlVariables : Object[]) : T </td></tr>
<tr><td align="left" balign="left"> + execute(url : String, method : HttpMethod, requestCallback : RequestCallback, responseExtractor : ResponseExtractor&lt;T&gt;, urlVariables : Map&lt;String, ?&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + execute(url : URI, method : HttpMethod, requestCallback : RequestCallback, responseExtractor : ResponseExtractor&lt;T&gt;) : T </td></tr>
		</table></td></tr>
		</table>>, URL="./RestTemplateForTest14x.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// cn.home1.oss.lib.test.RestTemplateForTest
	c16 [label=<<table title="cn.home1.oss.lib.test.RestTemplateForTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./RestTemplateForTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RestTemplateForTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + newHttpEntity(contentType : MediaType, accpet : MediaType, param : T) : HttpEntity&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRestTemplate() : RestTemplate </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setUriTemplateHandler(handler : UriTemplateHandler) </font></td></tr>
<tr><td align="left" balign="left"> + exchange(url : String, method : HttpMethod, contentType : MediaType, accpet : MediaType, type : Class&lt;T&gt;, param : P) : ResponseEntity&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./RestTemplateForTest.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//cn.home1.oss.lib.test.RestTemplateForTest14x implements cn.home1.oss.lib.test.RestTemplateForTest
	c16:p -> c15:p [dir=back,arrowtail=empty,style=dashed];
	//cn.home1.oss.lib.test.RestTemplateForTest implements org.springframework.web.client.RestOperations
	c19:p -> c16:p [dir=back,arrowtail=empty,style=dashed];
	// org.springframework.web.client.RestOperations
	c19 [label=<<table title="org.springframework.web.client.RestOperations" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/springframework/web/client/RestOperations.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RestOperations </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getForObject(arg0 : String, arg1 : Class&lt;T&gt;, arg2 : Object[]) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getForObject(arg0 : String, arg1 : Class&lt;T&gt;, arg2 : Map&lt;String, ?&gt;) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getForObject(arg0 : URI, arg1 : Class&lt;T&gt;) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getForEntity(arg0 : String, arg1 : Class&lt;T&gt;, arg2 : Object[]) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getForEntity(arg0 : String, arg1 : Class&lt;T&gt;, arg2 : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getForEntity(arg0 : URI, arg1 : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + headForHeaders(arg0 : String, arg1 : Object[]) : HttpHeaders </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + headForHeaders(arg0 : String, arg1 : Map&lt;String, ?&gt;) : HttpHeaders </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + headForHeaders(arg0 : URI) : HttpHeaders </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForLocation(arg0 : String, arg1 : Object, arg2 : Object[]) : URI </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForLocation(arg0 : String, arg1 : Object, arg2 : Map&lt;String, ?&gt;) : URI </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForLocation(arg0 : URI, arg1 : Object) : URI </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForObject(arg0 : String, arg1 : Object, arg2 : Class&lt;T&gt;, arg3 : Object[]) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForObject(arg0 : String, arg1 : Object, arg2 : Class&lt;T&gt;, arg3 : Map&lt;String, ?&gt;) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForObject(arg0 : URI, arg1 : Object, arg2 : Class&lt;T&gt;) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForEntity(arg0 : String, arg1 : Object, arg2 : Class&lt;T&gt;, arg3 : Object[]) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForEntity(arg0 : String, arg1 : Object, arg2 : Class&lt;T&gt;, arg3 : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + postForEntity(arg0 : URI, arg1 : Object, arg2 : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + put(arg0 : String, arg1 : Object, arg2 : Object[]) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + put(arg0 : String, arg1 : Object, arg2 : Map&lt;String, ?&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + put(arg0 : URI, arg1 : Object) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + delete(arg0 : String, arg1 : Object[]) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + delete(arg0 : String, arg1 : Map&lt;String, ?&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + delete(arg0 : URI) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + optionsForAllow(arg0 : String, arg1 : Object[]) : Set&lt;HttpMethod&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + optionsForAllow(arg0 : String, arg1 : Map&lt;String, ?&gt;) : Set&lt;HttpMethod&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + optionsForAllow(arg0 : URI) : Set&lt;HttpMethod&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : String, arg1 : HttpMethod, arg2 : HttpEntity&lt;?&gt;, arg3 : Class&lt;T&gt;, arg4 : Object[]) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : String, arg1 : HttpMethod, arg2 : HttpEntity&lt;?&gt;, arg3 : Class&lt;T&gt;, arg4 : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : URI, arg1 : HttpMethod, arg2 : HttpEntity&lt;?&gt;, arg3 : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : String, arg1 : HttpMethod, arg2 : HttpEntity&lt;?&gt;, arg3 : ParameterizedTypeReference&lt;T&gt;, arg4 : Object[]) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : String, arg1 : HttpMethod, arg2 : HttpEntity&lt;?&gt;, arg3 : ParameterizedTypeReference&lt;T&gt;, arg4 : Map&lt;String, ?&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : URI, arg1 : HttpMethod, arg2 : HttpEntity&lt;?&gt;, arg3 : ParameterizedTypeReference&lt;T&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : RequestEntity&lt;?&gt;, arg1 : Class&lt;T&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exchange(arg0 : RequestEntity&lt;?&gt;, arg1 : ParameterizedTypeReference&lt;T&gt;) : ResponseEntity&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(arg0 : String, arg1 : HttpMethod, arg2 : RequestCallback, arg3 : ResponseExtractor&lt;T&gt;, arg4 : Object[]) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(arg0 : String, arg1 : HttpMethod, arg2 : RequestCallback, arg3 : ResponseExtractor&lt;T&gt;, arg4 : Map&lt;String, ?&gt;) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(arg0 : URI, arg1 : HttpMethod, arg2 : RequestCallback, arg3 : ResponseExtractor&lt;T&gt;) : T </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/springframework/web/client/RestOperations.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

